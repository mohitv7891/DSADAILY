//POTD_8-NOV-2024
//Minimum repeat to make substring

class Solution {
    public:
    int minRepeats(string& s1, string& s2) {
        //step1 check if every character of s2 belongs to s1
        for(int i=0;i<s2.length();i++){
            int ch = s2[i];
            if(s1.find(ch)==std::string::npos){
                return -1;
            }
        }
        int count = 1;
        // Check if s2 is not a substring of s1
        string repeated_s1=s1;
        while(repeated_s1.length()<s2.length()){
            repeated_s1+=s1;
            count++;
        }
       if(repeated_s1.find(s2) != std::string::npos) 
       { 
           return count;
       }
       repeated_s1+=s1;
       count++;
    if (repeated_s1.find(s2) != std::string::npos) {
            return count;
        }
        return -1;
        
    }
};
